#
# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.
#

# append target common source files 
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/platform_heap.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/FreeRTOS-openocd.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/GenericPort_Write.cpp)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls_entropy_hardware_pool.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/platform_BlockStorage.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/Target_BlockStorage_ESP32FlashDriver.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/targetHAL_Time.cpp)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/targetHAL.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/WireProtocol_HAL_Interface.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/WireProtocol_ReceiverThread.c)
list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/Target_Windows_Storage.c)


# list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/WireProtocol_ReceiverThread.c")
# list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/WireProtocol_HAL_Interface.c")

# list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/syscalls.c")

# # append nanoHAL
# list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/platformHAL.c")
# list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/platformHAL_Time.cpp")

# # append configuration manager according to target
# if("${TARGET_SERIES}" STREQUAL "CC32xx")
    
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/CC32xxFlash_BlockStorageInterface.c")
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/nanoSupport_CRC32.c")

#     # block storage and configration block
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/Target_BlockStorage_CC32xxFlashDriver.c")
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/targetHAL_ConfigurationManager_CC32xx.cpp")

#     # append sockets and SSL driver
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/simplelink_sockets_functions.cpp")
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/simplelink_sockets.cpp")
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/sockets_simplelink.cpp")
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/ssl_simplelink.cpp")

# elseif("${TARGET_SERIES}" STREQUAL "CC13x2_26x2")
    
#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/CC13x2_26x2Flash_BlockStorageInterface.c")

#     list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/Target_BlockStorage_CC13x2_26x2FlashDriver.c")
#     # list(APPEND TARGET_ESP32_IDF_COMMON_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/targetHAL_ConfigurationManager_CC13x2_26x2.cpp")
# endif()

# # make var global
# set(TARGET_ESP32_IDF_COMMON_SOURCES ${TARGET_ESP32_IDF_COMMON_SOURCES} CACHE INTERNAL "make global")
