# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

parameters:
  buildDirectory: '$(Build.SourcesDirectory)\build'
  partitionsDirectory: '$(Build.SourcesDirectory)\targets\FreeRTOS_ESP32\$(TargetBoard)'

steps:

# create build folder

  - task: PowerShell@2
    displayName: create build folder
    inputs:
      targetType: 'inline'
      workingDirectory: $(Agent.BuildDirectory)\s\esp-idf\examples\build_system\cmake\idf_as_lib
      script: mkdir -Force "build" | Out-Null

  - task: CMake@1
    inputs:
      cmakeArgs: '-DCMAKE_TOOLCHAIN_FILE=$(IDF_PATH)/tools/cmake/toolchain-esp32.cmake -DTARGET=esp32 -DESP_PLATFORM=1 -DIDF_TARGET=esp32 -G Ninja ..'
      workingDirectory: $(Agent.BuildDirectory)\s\esp-idf\examples\build_system\cmake\idf_as_lib\build
    displayName: Setup build with CMake

  - task: CMake@1
    inputs:
      cmakeArgs: '--build .'
      workingDirectory:  $(Agent.BuildDirectory)\s\esp-idf\examples\build_system\cmake\idf_as_lib\build
    displayName: Build with CMake

  # # because of permission issues (the python script isn't allowed to write on the output folder)
  # # we need to perform these steps by calling directly the python scripts
  # - task: PythonScript@0
  #   condition: succeeded()
  #   displayName: Generate nanoCLR bin file for deployment
  #   inputs:
  #     scriptSource: 'filePath'
  #     scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.5\components\esptool_py\esptool\esptool.py'
  #     arguments: '--chip esp32 elf2image --flash_mode dio --flash_freq 40m --flash_size 4MB -o ${{ parameters.buildDirectory }}\nanoCLR.bin ${{ parameters.buildDirectory }}\nanoCLR.elf'

  # - task: PythonScript@0
  #   condition: succeeded()
  #   displayName: Generate Esp32 Partition tables for 16MB flash
  #   inputs:
  #     scriptSource: 'filePath'
  #     scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.5\components\partition_table\gen_esp32part.py'
  #     arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_16mb.csv ${{ parameters.buildDirectory }}\partitions_16mb.bin'
  # - task: PythonScript@0
  #   condition: succeeded()
  #   displayName: Generate Esp32 Partition tables for 8MB flash
  #   inputs:
  #     scriptSource: 'filePath'
  #     scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.5\components\partition_table\gen_esp32part.py'
  #     arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_8mb.csv ${{ parameters.buildDirectory }}\partitions_8mb.bin'

  # - task: PythonScript@0
  #   condition: succeeded()
  #   displayName: Generate Esp32 Partition tables for 4MB flash
  #   inputs:
  #     scriptSource: 'filePath'
  #     scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.5\components\partition_table\gen_esp32part.py'
  #     arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_4mb.csv ${{ parameters.buildDirectory }}\partitions_4mb.bin'

  # - task: PythonScript@0
  #   condition: succeeded()
  #   displayName: Generate Esp32 Partition tables for 2MB flash
  #   inputs:
  #     scriptSource: 'filePath'
  #     scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.5\components\partition_table\gen_esp32part.py'
  #     arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_2mb.csv ${{ parameters.buildDirectory }}\partitions_2mb.bin'

  # - task: PythonScript@0
  #   condition: succeeded()
  #   displayName: List flash 4Mb Esp32 Partition tables
  #   inputs:
  #     scriptSource: 'filePath'
  #     scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.5\components\partition_table\gen_esp32part.py'
  #     arguments: '${{ parameters.buildDirectory }}\partitions_4mb.bin'
